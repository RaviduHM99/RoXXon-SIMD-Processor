$date
   Mon Feb 10 11:44:10 2025
$end

$version
  2023.2
  $dumpfile ("INSTR_AXI_Fetch_tb.vcd") 
$end

$timescale
  1ps
$end

$scope module Top_PL_tb $end
$var reg 1 ! CLK $end
$var reg 1 " RSTN $end
$var reg 13 # addrb [12:0] $end
$var reg 32 $ dinb [31:0] $end
$var reg 32 % doutb [31:0] $end
$var reg 1 & enb $end
$var reg 4 ' web [3:0] $end
$var reg 32 ( INSTR_AXI [31:0] $end
$var reg 9 ) PC_AXI [8:0] $end
$var reg 1 * START_SIGNAL $end
$var reg 1 + STOP_SIGNAL $end
$scope module dut $end
$var wire 1 , CLK $end
$var wire 1 - RSTN $end
$var reg 13 # addrb [12:0] $end
$var reg 32 $ dinb [31:0] $end
$var wire 32 . doutb [31:0] $end
$var reg 1 & enb $end
$var reg 4 ' web [3:0] $end
$var wire 32 / INSTR_AXI [31:0] $end
$var reg 9 ) PC_AXI [8:0] $end
$var wire 1 0 START_SIGNAL $end
$var reg 1 + STOP_SIGNAL $end
$var wire 1 1 ADD_CTRL $end
$var wire 1 2 ADD_INC $end
$var wire 1 3 ADD_RST $end
$var wire 1 4 ADD_STORE $end
$var wire 4 5 STORE_ADDRESS [3:0] $end
$var reg 1 6 ADD_DONE $end
$var reg 1 7 ADD_DONE0 $end
$var reg 1 8 ADD_DONE1 $end
$var reg 1 9 ADD_DONE2 $end
$var reg 1 : ADD_DONE3 $end
$var wire 4 ; RST_ADD [3:0] $end
$var wire 4 < MAC_CTRL [3:0] $end
$var wire 4 = RST_ACC [3:0] $end
$var wire 4 > RST_PC [3:0] $end
$var wire 4 ? MAT_MUX [3:0] $end
$var wire 4 @ WRITE_MAT [3:0] $end
$var wire 4 A OUT_READY [3:0] $end
$var wire 2 B DIMEN [1:0] $end
$var wire 32 C PE_DIN_0 [31:0] $end
$var wire 32 D PE_DIN_1 [31:0] $end
$var wire 32 E PE_DIN_2 [31:0] $end
$var wire 32 F PE_DIN_3 [31:0] $end
$var wire 32 G PE_DOUT_0 [31:0] $end
$var wire 32 H PE_DOUT_1 [31:0] $end
$var wire 32 I PE_DOUT_2 [31:0] $end
$var wire 32 J PE_DOUT_3 [31:0] $end
$var wire 1 K ADDR_START $end
$var wire 1 L ADDR_RST $end
$var wire 17 M ADDRESS [16:0] $end
$var wire 1 N FETCH_DONE $end
$var wire 2 O PE_SEL [1:0] $end
$var wire 1 P PE_SEL_2x2 $end
$var wire 1 Q PE_SEL_4 $end
$var wire 1 R WRADDR_START $end
$var wire 1 S STORE_DONE $end
$var wire 3 T latency_counter [2:0] $end
$var wire 32 U INSTR [31:0] $end
$var wire 1 V PC_INCR $end
$var wire 1 W INSTR_DONE $end
$var reg 4 X MAC_DONE_PE [3:0] $end
$var reg 1 Y MAC_DONE $end
$scope module CU $end
$var wire 1 , CLK $end
$var wire 1 - RSTN $end
$var wire 32 U INSTR [31:0] $end
$var reg 1 Z PC_INCR $end
$var reg 1 [ INSTR_DONE $end
$var reg 4 \ RST_ADD [3:0] $end
$var reg 4 ] MAC_CTRL [3:0] $end
$var reg 4 ^ RST_ACC [3:0] $end
$var reg 4 _ RST_PC [3:0] $end
$var reg 4 ` MAT_MUX [3:0] $end
$var reg 4 a WRITE_MAT [3:0] $end
$var reg 4 b OUT_READY [3:0] $end
$var wire 1 c MAC_DONE $end
$var reg 1 d ADD_CTRL $end
$var reg 1 e ADD_INC $end
$var reg 1 f ADD_RST $end
$var reg 1 g ADD_STORE $end
$var reg 4 h STORE_ADDRESS [3:0] $end
$var wire 1 i ADD_DONE $end
$var reg 2 j DIMEN [1:0] $end
$var reg 1 k ADDR_START $end
$var reg 1 l ADDR_RST $end
$var reg 17 m ADDRESS [16:0] $end
$var wire 1 N FETCH_DONE $end
$var reg 2 n PE_SEL [1:0] $end
$var reg 1 o PE_SEL_2x2 $end
$var reg 1 p PE_SEL_4 $end
$var reg 1 q WRADDR_START $end
$var wire 1 S STORE_DONE $end
$var wire 1 0 START_SIGNAL $end
$var reg 1 + STOP_SIGNAL $end
$var reg 3 r STATE $end
$var reg 3 s NEXT_STATE $end
$upscope $end
$scope module DF $end
$var wire 1 , CLK $end
$var reg 13 # addrb [12:0] $end
$var reg 32 $ dinb [31:0] $end
$var wire 32 . doutb [31:0] $end
$var reg 1 & enb $end
$var reg 4 ' web [3:0] $end
$var wire 2 B DIMEN [1:0] $end
$var wire 1 K ADDR_START $end
$var wire 1 L ADDR_RST $end
$var wire 17 M ADDRESS [16:0] $end
$var reg 1 t FETCH_DONE $end
$var wire 2 O PE_SEL [1:0] $end
$var wire 1 P PE_SEL_2x2 $end
$var wire 1 Q PE_SEL_4 $end
$var wire 1 R WRADDR_START $end
$var reg 1 u STORE_DONE $end
$var reg 3 v latency_counter [2:0] $end
$var reg 32 w PE_DIN_0 [31:0] $end
$var reg 32 x PE_DIN_1 [31:0] $end
$var reg 32 y PE_DIN_2 [31:0] $end
$var reg 32 z PE_DIN_3 [31:0] $end
$var wire 32 G PE_DOUT_0 [31:0] $end
$var wire 32 H PE_DOUT_1 [31:0] $end
$var wire 32 I PE_DOUT_2 [31:0] $end
$var wire 32 J PE_DOUT_3 [31:0] $end
$var reg 3 { latency_counter_DF [2:0] $end
$var reg 1 | latency_rst $end
$var reg 1 } latency_incr $end
$var reg 32 ~ ADDR [31:0] $end
$var reg 1 !! ADDR_INC $end
$var reg 32 "! DATA_PE_IN [31:0] $end
$var reg 128 #! DATA_PE_OUT [127:0] $end
$var reg 17 $! IN_ADDRESS [16:0] $end
$upscope $end
$scope module IF $end
$var wire 1 , CLK $end
$var wire 1 - RSTN $end
$var reg 32 %! INSTR [31:0] $end
$var wire 1 V PC_INCR $end
$var wire 1 W INSTR_DONE $end
$var wire 32 / INSTR_AXI [31:0] $end
$var reg 9 ) PC_AXI [8:0] $end
$var reg 9 &! PC [8:0] $end
$upscope $end
$scope module PE0 $end
$var wire 1 , CLK $end
$var wire 3 T latency_counter [2:0] $end
$var wire 1 '! RST_ADD $end
$var wire 32 C DATAIN [31:0] $end
$var wire 1 (! MAC_CTRL $end
$var wire 1 )! RST_ACC $end
$var wire 1 *! RST_PC $end
$var wire 1 1 ADD_CTRL $end
$var wire 1 2 ADD_INC $end
$var wire 1 3 ADD_RST $end
$var wire 1 4 ADD_STORE $end
$var wire 4 5 STORE_ADDRESS [3:0] $end
$var reg 1 7 ADD_DONE $end
$var wire 1 +! MAT_MUX $end
$var wire 1 ,! WRITE_MAT $end
$var wire 2 B DIMEN [1:0] $end
$var wire 1 -! OUT_READY $end
$var reg 1 .! MAC_DONE $end
$var reg 32 /! DATAOUT [31:0] $end
$var reg 512 0! MATA [511:0] $end
$var reg 512 1! MATB [511:0] $end
$var reg 512 2! MATC [511:0] $end
$var reg 32 3! ACC_DATA [31:0] $end
$var reg 4 4! PC [3:0] $end
$var reg 4 5! ADDR [3:0] $end
$var reg 1 6! WRITE_DONE $end
$var reg 1 7! INC_PC $end
$var wire 32 8! MUL_DATA [31:0] $end
$var reg 32 9! ADD_PC [31:0] $end
$upscope $end
$scope module PE1 $end
$var wire 1 , CLK $end
$var wire 3 T latency_counter [2:0] $end
$var wire 1 :! RST_ADD $end
$var wire 32 D DATAIN [31:0] $end
$var wire 1 ;! MAC_CTRL $end
$var wire 1 <! RST_ACC $end
$var wire 1 =! RST_PC $end
$var wire 1 1 ADD_CTRL $end
$var wire 1 2 ADD_INC $end
$var wire 1 3 ADD_RST $end
$var wire 1 4 ADD_STORE $end
$var wire 4 5 STORE_ADDRESS [3:0] $end
$var reg 1 8 ADD_DONE $end
$var wire 1 >! MAT_MUX $end
$var wire 1 ?! WRITE_MAT $end
$var wire 2 B DIMEN [1:0] $end
$var wire 1 @! OUT_READY $end
$var reg 1 A! MAC_DONE $end
$var reg 32 B! DATAOUT [31:0] $end
$var reg 512 C! MATA [511:0] $end
$var reg 512 D! MATB [511:0] $end
$var reg 512 E! MATC [511:0] $end
$var reg 32 F! ACC_DATA [31:0] $end
$var reg 4 G! PC [3:0] $end
$var reg 4 H! ADDR [3:0] $end
$var reg 1 I! WRITE_DONE $end
$var reg 1 J! INC_PC $end
$var wire 32 K! MUL_DATA [31:0] $end
$var reg 32 L! ADD_PC [31:0] $end
$upscope $end
$scope module PE2 $end
$var wire 1 , CLK $end
$var wire 3 T latency_counter [2:0] $end
$var wire 1 M! RST_ADD $end
$var wire 32 E DATAIN [31:0] $end
$var wire 1 N! MAC_CTRL $end
$var wire 1 O! RST_ACC $end
$var wire 1 P! RST_PC $end
$var wire 1 1 ADD_CTRL $end
$var wire 1 2 ADD_INC $end
$var wire 1 3 ADD_RST $end
$var wire 1 4 ADD_STORE $end
$var wire 4 5 STORE_ADDRESS [3:0] $end
$var reg 1 9 ADD_DONE $end
$var wire 1 Q! MAT_MUX $end
$var wire 1 R! WRITE_MAT $end
$var wire 2 B DIMEN [1:0] $end
$var wire 1 S! OUT_READY $end
$var reg 1 T! MAC_DONE $end
$var reg 32 U! DATAOUT [31:0] $end
$var reg 512 V! MATA [511:0] $end
$var reg 512 W! MATB [511:0] $end
$var reg 512 X! MATC [511:0] $end
$var reg 32 Y! ACC_DATA [31:0] $end
$var reg 4 Z! PC [3:0] $end
$var reg 4 [! ADDR [3:0] $end
$var reg 1 \! WRITE_DONE $end
$var reg 1 ]! INC_PC $end
$var wire 32 ^! MUL_DATA [31:0] $end
$var reg 32 _! ADD_PC [31:0] $end
$upscope $end
$scope module PE3 $end
$var wire 1 , CLK $end
$var wire 3 T latency_counter [2:0] $end
$var wire 1 `! RST_ADD $end
$var wire 32 F DATAIN [31:0] $end
$var wire 1 a! MAC_CTRL $end
$var wire 1 b! RST_ACC $end
$var wire 1 c! RST_PC $end
$var wire 1 1 ADD_CTRL $end
$var wire 1 2 ADD_INC $end
$var wire 1 3 ADD_RST $end
$var wire 1 4 ADD_STORE $end
$var wire 4 5 STORE_ADDRESS [3:0] $end
$var reg 1 : ADD_DONE $end
$var wire 1 d! MAT_MUX $end
$var wire 1 e! WRITE_MAT $end
$var wire 2 B DIMEN [1:0] $end
$var wire 1 f! OUT_READY $end
$var reg 1 g! MAC_DONE $end
$var reg 32 h! DATAOUT [31:0] $end
$var reg 512 i! MATA [511:0] $end
$var reg 512 j! MATB [511:0] $end
$var reg 512 k! MATC [511:0] $end
$var reg 32 l! ACC_DATA [31:0] $end
$var reg 4 m! PC [3:0] $end
$var reg 4 n! ADDR [3:0] $end
$var reg 1 o! WRITE_DONE $end
$var reg 1 p! INC_PC $end
$var wire 32 q! MUL_DATA [31:0] $end
$var reg 32 r! ADD_PC [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
0!
x!!
0"
bx "!
bx #
b0 #!
bx $
bx $!
bx %
bx %!
x&
bx &!
bx '
x'!
bx (
x(!
bx )
x)!
x*
x*!
x+
x+!
0,
x,!
0-
x-!
bx .
x.!
bx /
b0 /!
x0
b0 0!
x1
b0 1!
x2
b0 2!
x3
bx 3!
x4
bx 4!
bx 5
bx 5!
x6
x6!
x7
x7!
x8
bx 8!
x9
bx 9!
x:
x:!
bx ;
x;!
bx <
x<!
bx =
x=!
bx >
x>!
bx ?
x?!
bx @
x@!
bx A
xA!
bx B
b0 B!
bx C
b0 C!
bx D
b0 D!
bx E
b0 E!
bx F
bx F!
b0 G
bx G!
b0 H
bx H!
b0 I
xI!
b0 J
xJ!
xK
bx K!
xL
bx L!
bx M
xM!
xN
xN!
bx O
xO!
xP
xP!
xQ
xQ!
xR
xR!
xS
xS!
bx T
xT!
bx U
b0 U!
xV
b0 V!
xW
b0 W!
bx X
b0 X!
xY
bx Y!
xZ
bx Z!
x[
bx [!
bx \
x\!
bx ]
x]!
bx ^
bx ^!
bx _
bx _!
bx `
x`!
bx a
xa!
bx b
xb!
xc
xc!
xd
xd!
xe
xe!
xf
xf!
xg
xg!
bx h
b0 h!
xi
b0 i!
bx j
b0 j!
xk
b0 k!
xl
bx l!
bx m
bx m!
bx n
bx n!
xo
xo!
xp
xp!
xq
bx q!
bx r
bx r!
bx s
xt
xu
bx v
bx w
bx x
bx y
bx z
bx {
x|
x}
bx ~
$end

#5000
1!
0!!
b0 "!
b0 $
0&
b0 '
0'!
0(!
0)!
0*!
0+
0+!
1,
0,!
0-!
01
02
03
04
b0 5
07!
b0 8!
0:!
b0 ;
0;!
b0 <
0<!
b0 =
0=!
b0 >
0>!
b0 ?
0?!
b0 @
0@!
b0 A
b0 B
b0 C
b0 D
b0 E
b0 F
0J!
0K
b0 K!
0L
0M!
0N!
b0 O
0O!
0P
0P!
0Q
0Q!
0R
0R!
0S
0S!
0V
0Z
b0 \
b0 ]
0]!
b0 ^
b0 ^!
b0 _
b0 `
0`!
b0 a
0a!
b0 b
0b!
0c!
0d
0d!
0e
0e!
0f
0f!
0g
b0 h
b0 j
0k
0l
b0 n
0o
0p
0p!
0q
b0 q!
0u
b0 w
b0 x
b0 y
b0 z
0}

#6000
1"
b0 %
b0 (
0*
1-
b0 .
b0 /
00

#10000
0!
0,

#15000
1!
b0 %!
b0 &!
1'!
b0 )
1)!
1*!
1,
13
1:!
b1111 ;
1<!
b1111 =
1=!
b1111 >
1L
b0 M
1M!
1O!
1P!
b0 U
b1111 \
b1111 ^
b1111 _
1`!
1b!
1c!
1f
1l
b0 m
b0 r
b0 s

#16000
0"
0-

#20000
0!
0,

#25000
1!
b0 #
b0 $!
0'!
0)!
0*!
1,
0.!
03
b0 3!
b0 4!
b0 5!
06
06!
07
08
09
b0 9!
0:
0:!
b0 ;
0<!
b0 =
0=!
b0 >
0A!
b0 F!
b0 G!
b0 H!
0I!
0L
b0 L!
0M!
0N
0O!
0P!
b0 T
0T!
0W
b0 X
0Y
b0 Y!
b0 Z!
0[
b0 [!
b0 \
0\!
b0 ^
b0 _
b0 _!
0`!
0b!
0c
0c!
0f
0g!
0i
0l
b0 l!
b0 m!
b0 n!
0o!
b0 r!
0t
b0 v
b0 {
0|
b0 ~

#26000
b10001100100010 (
1*
b10001100100010 /
10
1W
1[

#30000
0!
0,

#35000
1!
b10001100100010 %!
1,
b10001100100010 U
0W
0[
b1 r
b10 s

#40000
0!
0,

#45000
1!
1)!
1,
1<!
b1111 =
1O!
1V
1Z
b1111 ^
1b!
b10 r

#50000
0!
0,

#55000
1!
1!!
1&
b1 &!
b1 )
0)!
1+!
1,
1,!
0<!
b0 =
1>!
b1111 ?
1?!
b11 @
1K
b10 O
0O!
1P
1Q!
0R!
0V
0Z
b0 ^
b1111 `
b11 a
0b!
1d!
0e!
1k
b10 n
1o
1}

#56000
b11001 "!
b11001 %
b11001 .
b11001 C
b11001 D
b11001 w
b11001 x

#60000
0!
0,

#65000
1!
1,
b1 T
b1111 `
b11 a
1k
b10 n
1o
b1 v
b1 {

#66000
b11101 "!
b11101 %
b11101 .
b11101 C
b11101 D
b11101 w
b11101 x

#70000
0!
0,

#75000
1!
1,
b10 T
b1111 `
b11 a
1k
b10 n
1o
b10 v
b10 {
1|

#76000
b11100100010 (
b11100100010 /

#80000
0!
0,

#85000
1!
b1 #
b1 $!
1,
b11101 0!
b1 5!
b11101 C!
b1 H!
b0 T
b1111 `
b11 a
1k
b10 n
1o
b0 v
b0 {
0|
b1 ~

#90000
0!
0,

#95000
1!
1,
b1 T
b1111 `
b11 a
1k
b10 n
1o
b1 v
b1 {

#100000
0!
0,

#105000
1!
1,
b10 T
b1111 `
b11 a
1k
b10 n
1o
b10 v
b10 {
1|

#106000
b101111 "!
b101111 %
b101111 .
b101111 C
b101111 D
b101111 w
b101111 x

#110000
0!
0,

#115000
1!
b10 #
b10 $!
1,
b10111100000000000000000000000000011101 0!
b10 5!
16!
b10111100000000000000000000000000011101 C!
b10 H!
1I!
1N
b0 T
1W
1[
b1111 `
b11 a
1k
b10 n
1o
1t
b0 v
b0 {
0|
b10 ~

#116000
b1100 "!
b1100 %
b1100 .
b1100 C
b1100 D
b1100 w
b1100 x

#120000
0!
0,

#125000
1!
0!!
b0 "!
b11100100010 %!
0&
1'!
1,
1:!
b1111 ;
b0 C
b0 D
0K
1L
1M!
b1 T
b11100100010 U
b1111 \
b1111 `
1`!
b11 a
0k
1l
b10 n
1o
b1 r
b1 v
b0 w
b0 x
b1 {
0}

#126000
b10101110100011 (
b10101110100011 /

#130000
0!
0,

#135000
1!
b0 #
b0 $!
b10101110100011 %!
0'!
1)!
0+!
1,
0,!
b0 5!
06!
0:!
b0 ;
1<!
b1111 =
0>!
b0 ?
0?!
b0 @
b0 H!
0I!
0L
0M!
0N
b0 O
1O!
0Q!
0R!
b0 T
b10101110100011 U
1V
0W
1Z
0[
b0 \
b1111 ^
b0 `
0`!
b0 a
1b!
0d!
0e!
0l
b0 n
1o
b10 r
b11 s
0t
b0 v
b0 {
b0 ~

#140000
0!
0,

#145000
1!
1!!
b1100 "!
1&
b10 &!
b10 )
0)!
1+!
1,
1,!
0<!
b0 =
1>!
b1111 ?
0?!
b101 @
b1100 C
b1100 E
1K
b11 O
0O!
1Q!
1R!
0V
0Z
b0 ^
b1111 `
b101 a
0b!
1d!
0e!
1k
b11 n
1o
b1100 w
b1100 y
1}

#150000
0!
0,

#155000
1!
1,
b1 T
b1111 `
b101 a
1k
b11 n
1o
b1 v
b1 {

#156000
b110011 "!
b110011 %
b110011 .
b110011 C
b110011 E
b110011 w
b110011 y

#160000
0!
0,

#165000
1!
1,
b10 T
b1111 `
b101 a
1k
b11 n
1o
b10 v
b10 {
1|

#166000
b111111 "!
b111111 %
b111111 .
b111111 C
b111111 E
b111111 w
b111111 y

#170000
0!
0,

#175000
1!
b1 #
b1 $!
1,
b10111100000000000000000000000000111111 0!
b1 5!
b0 T
b111111 V!
b1 [!
b1111 `
b101 a
1k
b11 n
1o
b0 v
b0 {
0|
b1 ~

#176000
b111110100011 (
b111110100011 /

#180000
0!
0,

#185000
1!
1,
b1 T
b1111 `
b101 a
1k
b11 n
1o
b1 v
b1 {

#190000
0!
0,

#195000
1!
1,
b10 T
b1111 `
b101 a
1k
b11 n
1o
b10 v
b10 {
1|

#200000
0!
0,

#205000
1!
b10 #
b10 $!
1,
b11111100000000000000000000000000111111 0!
b10 5!
16!
1N
b0 T
b11111100000000000000000000000000111111 V!
1W
1[
b10 [!
1\!
b1111 `
b101 a
1k
b11 n
1o
1t
b0 v
b0 {
0|
b10 ~

#206000
b1100001 "!
b1100001 %
b1100001 .
b1100001 C
b1100001 E
b1100001 w
b1100001 y

#210000
0!
0,

#215000
1!
0!!
b0 "!
b111110100011 %!
0&
1'!
1,
1:!
b1111 ;
b0 C
b0 E
0K
1L
1M!
b1 T
b111110100011 U
b1111 \
b1111 `
1`!
b101 a
0k
1l
b11 n
1o
b1 r
b1 v
b0 w
b0 y
b1 {
0}

#216000
b1101 %
b1101 .

#220000
0!
0,

#225000
1!
b0 #
b0 $!
0'!
1)!
0+!
1,
0,!
b0 5!
06!
0:!
b0 ;
1<!
b1111 =
0>!
b0 ?
0?!
b0 @
0L
0M!
0N
b0 O
1O!
0Q!
0R!
b0 T
1V
0W
1Z
0[
b0 [!
b0 \
0\!
b1111 ^
b0 `
0`!
b0 a
1b!
0d!
0e!
0l
b0 n
1o
b11 r
0t
b0 v
b0 {
b0 ~

#226000
b100 (
b100 /

#230000
0!
0,

#235000
1!
1!!
b1101 "!
1&
b11 &!
b11 )
0)!
1,
0,!
0<!
b0 =
1?!
b1010 @
b1101 D
b1101 F
1K
b11 O
0O!
0P
0R!
0V
0Z
b0 ^
b1010 a
0b!
1e!
1k
b11 n
0o
b1101 x
b1101 z
1}

#240000
0!
0,

#245000
1!
1,
b1 T
b1010 a
1k
b11 n
b1 v
b1 {

#250000
0!
0,

#255000
1!
1,
b10 T
b1010 a
1k
b11 n
b10 v
b10 {
1|

#260000
0!
0,

#265000
1!
b1 #
b1 $!
1,
b1101 D!
b1 H!
b0 T
b1010 a
b1101 j!
1k
b11 n
b1 n!
b0 v
b0 {
0|
b1 ~

#270000
0!
0,

#275000
1!
1,
b1 T
b1010 a
1k
b11 n
b1 v
b1 {

#276000
b1001000000101 (
b1001000000101 /

#280000
0!
0,

#285000
1!
1,
b10 T
b1010 a
1k
b11 n
b10 v
b10 {
1|

#290000
0!
0,

#295000
1!
b10 #
b10 $!
1,
b110100000000000000000000000000001101 D!
b10 H!
1I!
1N
b0 T
1W
1[
b1010 a
b110100000000000000000000000000001101 j!
1k
b11 n
b10 n!
1o!
1t
b0 v
b0 {
0|
b10 ~

#300000
0!
0,

#305000
1!
0!!
b0 "!
b1001000000101 %!
0&
1'!
1,
1:!
b1111 ;
b0 D
b0 F
0K
1L
1M!
b1 T
b1001000000101 U
b1111 \
1`!
b1010 a
0k
1l
b11 n
b1 r
b101 s
b1 v
b0 x
b0 z
b1 {
0}

#310000
0!
0,

#315000
1!
b0 #
b0 $!
0'!
1,
0,!
0:!
b0 ;
0?!
b0 @
b0 H!
0I!
0L
0M!
0N
b0 O
0R!
b0 T
1V
0W
1Z
0[
b0 \
0`!
b0 a
0e!
0l
b0 n
b0 n!
0o!
b101 r
0t
b0 v
b0 {
b0 ~

#320000
0!
0,

#325000
1!
1!!
b1101 "!
1&
b100 &!
b1111 '
b100 )
1,
1-!
b1001 5
1@!
b1111 A
b1101 C
b1101 D
b1101 E
b1101 F
1K
1R
1S!
0V
0Z
b1111 b
1f!
b1001 h
1k
1q
b1101 w
b1101 x
b1101 y
b1101 z
1}

#330000
0!
0,

#335000
1!
b1 #
b1 $!
1,
b1 T
b1111 b
b1001 h
1k
1q
b1 v
b1 {
b1 ~

#336000
b110 (
b110 /

#340000
0!
0,

#345000
1!
b10 #
b10 $!
1,
1S
b10 T
1W
1[
b1111 b
b1001 h
1k
1q
1u
b10 v
b10 {
1|
b10 ~

#350000
0!
0,

#355000
1!
0!!
b0 "!
b11 #
b11 $!
b110 %!
1,
b0 C
b0 D
b0 E
b0 F
0K
1L
0S
b0 T
b110 U
0W
0[
b1111 b
b1001 h
0k
1l
1q
b1 r
b110 s
0u
b0 v
b0 w
b0 x
b0 y
b0 z
b0 {
0|
0}
b11 ~

#360000
0!
0,

#365000
1!
b0 #
b0 $!
0&
b0 '
1,
0-!
b0 5
0@!
b0 A
0L
0R
0S!
1V
1Z
b0 b
0f!
b0 h
0l
0q
b110 r
b0 ~

#370000
0!
0,

#375000
1!
b101 &!
b101 )
1+
1,
0V
0Z

#380000
0!
0,

#385000
1!
1+
1,

#390000
0!
0,

#395000
1!
1+
1,

#400000
0!
0,

#405000
1!
1+
1,

#410000
0!
0,

#415000
1!
1+
1,

#420000
0!
0,

#425000
1!
1+
1,

#430000
0!
0,
